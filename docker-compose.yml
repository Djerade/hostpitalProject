version: "3.8"

services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo_net
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo_net
    volumes:
      - mongo2_data:/data/db

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    networks:
      - mongo_net
    volumes:
      - mongo3_data:/data/db

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - mongo_net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - mongo_net
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-mongodb-datasource

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo1:27017
    depends_on:
      - mongo1
    networks:
      - mongo_net
  mongo-setup:
    image: mongo:6.0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo_net
    command: >
      bash -c "
        sleep 10 &&
        mongosh --host mongo1:27017 --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [
              { _id: 0, host: \"mongo1:27017\" },
              { _id: 1, host: \"mongo2:27017\" },
              { _id: 2, host: \"mongo3:27017\" }
            ]
          })'
      "

  mongodb-exporter:
    image: percona/mongodb_exporter:0.40
    container_name: mongodb_exporter
    environment:
      - MONGODB_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=rs0
    ports:
      - "9216:9216"
    networks:
      - mongo_net

  app:
    build: .
    container_name: hopital_app
    depends_on:
      - mongo1
      - prometheus
    environment:
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/hopital?replicaSet=rs0
    networks:
      - mongo_net
    volumes:
      - .:/app
    # command: ["python3", "app/main.py", "app/generate_data.py"]
    command: sh -c "python3 app/main.py && python3 app/generate_data.py"

networks:
  mongo_net:

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  grafana_data:
